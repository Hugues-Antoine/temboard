#!/bin/bash -eu
#
# Wrapper around pytest to configure marker expr from git diff.
#

main() {
    upstream="$1"; shift
    marker_expr=()

    if [ "$CIRCLE_BRANCH" = "$upstream" ] ; then
        log "Run all tests on $upstream."
    else
        if ! git diff --name-only "origin/$upstream"..HEAD | grep -f tests/monitoring-files ; then
            log "Skipping slow monitoring tests."
            marker_expr+=("not slowmonitoring")
        fi

        if ! git diff --name-only "origin/$upstream"..HEAD | grep -f tests/statements-files ; then
            log "Skipping slow statements tests."
            marker_expr+=("not slowstatements")
        fi

        if [ "${#marker_expr[@]}" -eq 0 ] ; then
            log "Running all test for modifications."
        fi
    fi

    marker_expr_s="$(join_array " and " "${marker_expr[@]-}")"

    if [ "${marker_expr_s}" ] ; then
        set -- "-m" "$marker_expr_s" "$@"
    fi

    args=("$@")  # Hack for CentOS 7 bash.
    log "Running pytest" "${args[@]@Q}"

    exec pytest "$@"
}


log() {
    echo "$*" >&2
}


# From https://stackoverflow.com/questions/1527049/how-can-i-join-elements-of-an-array-in-bash
join_array() {
	local d="${1-}" f="${2-}"
	if shift 2; then
		printf %s "$f" "${@/#/$d}"
	fi
}


main "$@"
